/*****************************************************************************************************************************************************
 *	Module: TIMER
 *
 *	File name: my_timer.h
 *
 *	Description: Header file of the timer
 *
 *	Author: FARID
 *
 ****************************************************************************************************************************************************/

#ifndef TIMER_H_
#define TIMER_H_

#include "std_types.h"

/*****************************************************************************************************************************************************
 *
 * 																		 CONFIGURATIONS
 *
 ****************************************************************************************************************************************************/

typedef enum
{
	NORMAL, COMP
}Timer_Mode;

typedef enum
{
	NO_CLOCK, NO_PRESCALER, PS_8, PS_64, PS_256, PS_1024, CLK_FALLING, CLK_RISING
}Timer_PreScaler;

typedef enum
{
	TIMER0, TIMER1, TIMER2
}Timer_ID;

typedef struct
{
	Timer_Mode mode;
	Timer_PreScaler prescaler;
	uint16 init_value;
	Timer_ID id;
	uint16 comp_value;
}Timer_Config;

/*****************************************************************************************************************************************************
 *
 * 																	 FUNCTIONS PROTOTYPES
 *
*****************************************************************************************************************************************************/

void Timer_Init( const Timer_Config *ConfigPtr );

void TIMER_setCallBack( void( *Timer_ptr )( void ), Timer_ID id, Timer_Mode mode );

void TIMER_intDeInit( Timer_ID id );

/***************************************************************************************************************************************************/
#endif
